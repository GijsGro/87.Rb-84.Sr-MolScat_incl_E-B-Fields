      SUBROUTINE IFMSG(IPROPS,IPROPL,INTFLG,RMIN,RMAX,DRLR,RVFAC,
     1                 IRMSET,IRXSET,SHRINK,NNRG,IABSDR,IMGSEL,IPRINT)
C  Copyright (C) 2018 J. M. Hutson & C. R. Le Sueur
C  Distributed under the GNU General Public License, version 3
      IMPLICIT NONE
      DOUBLE PRECISION,INTENT(IN)    :: RVFAC
      DOUBLE PRECISION,INTENT(INOUT) :: RMIN,RMAX,DRLR
      INTEGER, INTENT(IN)            :: INTFLG,IRMSET,IRXSET,SHRINK,
     1                                  NNRG,IABSDR,IMGSEL,IPRINT
      INTEGER, INTENT(INOUT)         :: IPROPS,IPROPL
C  SUBROUTINE WRITTEN BY CR Le Sueur 1-12-15
C  THIS SUBROUTINE CHECKS THE INTEGRATION (PROPAGATION) FLAGS IPROPS AND IPROPL
C  CURRENTLY LEGITIMATE VALUES FOR IPROPS ARE: 
C   -1: WKB INTEGRATION (ONLY FOR MOLSCAT)
C    2: DEVOGELAERE METHOD (ONLY FOR MOLSCAT)
C    3: R-MATRIX METHOD (ONLY FOR MOLSCAT)
C    5: JOHNSON LOG-DERIVATIVE METHOD,
C    6: DIABATIC MODIFIED LOG-DERIVATIVE METHOD OF MANOLOPOULOS,
C    7: QUASI-ADIABATIC MODIFIED LOG-DERIVATIVE METHOD OF MANOLOPOULOS,
C    9: SYMPLECTIC LOG-DERIVATIVE METHOD OF MANOLOPOULOS AND GRAY
C  CURRENTLY LEGITIMATE VALUES FOR IPROPL ARE: 
C    0: USE THE SAME PROPAGATOR AT LONG RANGE AS AT SHORT RANGE,
C    1: VARIABLE STEP AIRY METHOD OF ALEXANDER AND MANOLOPOULOS (BUT
C       ONLY IF IPROPS=5, 6, 7 OR 9
C   14: VIVAS METHOD (ONLY FOR MOLSCAT)
C
C  IT ALSO CHECKS THAT RMID AND RMATCH HAVE VALID VALUES AND
C  (IF IPRINT>0) PRINTS OUT VARIOUS MESSAGES TO DO WITH THE PROPAGATION
C  SEGMENT(S)
C
C  COMMON BLOCK FOR COMMUNICATING WITH COUPLED EQUATION SOLVERS
      COMMON /DRIVE / STEST,STEPS,STABIL,CONV,RSTART,RSTOP,XEPS,DR,
     1                DRMAX,RMID,RMATCH,TOLHI,RTURN,VTOL,ESHIFT,
     2                ERED,RMLMDA,NOPEN,JKEEP,ISCRU,MAXSTP,ILDSVU
      DOUBLE PRECISION STEST,STEPS,STABIL,CONV,RSTART,RSTOP,XEPS,DR,
     1                 DRMAX,RMID,RMATCH,TOLHI,RTURN,VTOL,ESHIFT,
     2                 ERED,RMLMDA
      INTEGER NOPEN,JKEEP,ISCRU,MAXSTP,ILDSVU

C  EXTRA COMMON BLOCK FOR VIVAS
      COMMON /LDVVCM/ XSQMAX,ALPHA1,ALPHA2,IALPHA,IALFP,IV,IVP,IVPP,
     1                ISHIFT,IDIAG,IPERT,ISYM
      DOUBLE PRECISION XSQMAX,ALPHA1,ALPHA2
      INTEGER IALPHA
      LOGICAL IALFP,IV,IVP,IVPP,ISHIFT,IDIAG,IPERT,ISYM

C  COMMON BLOCK FOR DERIVATIVES
      LOGICAL NUMDER
      COMMON /DERIVS/ NUMDER

C  COMMON BLOCK FOR AIRPRP: MANOLOPOLOUS/ALEXANDER HYBRID PROPAGATOR
      COMMON /HIBRIN/ POWRX,DRAIRY
      DOUBLE PRECISION POWRX,DRAIRY

C  COMMON BLOCK FOR WKB INTEGRATOR
      COMMON /WKBCOM/ NGMP(3)
      INTEGER NGMP

C  COMMON BLOCK TO DESCRIBE WHICH DRIVER IS USED
      COMMON /CNTROL/ CDRIVE
      CHARACTER(1) CDRIVE

C  COMMON BLOCK FOR PROPAGATION PARAMETERS
      INTEGER MXSEG,IDIR,IFLG,NSEGS,NSTEPS
      DOUBLE PRECISION VST,VEND,DRPR
      PARAMETER (MXSEG=3)
      COMMON /PRPDTA/ VST(MXSEG),VEND(MXSEG),DRPR(MXSEG),
     1                IDIR(MXSEG),IFLG(MXSEG),NSEGS,NSTEPS(MXSEG)

C  COMMON BLOCK FOR CONTROL OF PROPAGATION BOUNDARY CONDITIONS
      COMMON /BCCTRL/ BCYCMN,BCYCMX,BCYOMN,BCYOMX,ADIAMN,ADIAMX,
     1                WKBMN,WKBMX
      LOGICAL ADIAMN,ADIAMX,WKBMN,WKBMX
      DOUBLE PRECISION BCYCMN,BCYCMX,BCYOMN,BCYOMX

C  LOCAL VARIABLES
      INTEGER ISEG,NAPSTP
      CHARACTER(1) PLUR(2)
      DATA PLUR/' ','S'/
      CHARACTER(3) DIR(3)
      CHARACTER(6) RST(3),REND(3),NAMST,NAMEND
      CHARACTER(8) RINIT(2:3)
      DOUBLE PRECISION RBEGIN,RFIN,RENDAI,REXTRA,RWARN,GEOSTP,
     1                 VALMAX,DRTEMP
      CHARACTER(10) VALMIN
      CHARACTER(80) TXTMIN,TXTMAX,FMTMIN,TXTADD,FMTMAX,F1000
      LOGICAL ZRVFAC

      PARAMETER (REXTRA=1.D-5,RWARN=1.D-10)

      IF (STEPS.LE.0.D0 .OR. IABSDR.GE.1) STEPS=-10.D0

C  MESSAGES FOR SPECIAL CASES
C  ALTERATIONS FOR HISTORIC CODES THAT DON'T FIT THE NEW PATTERN
      IF (INTFLG.EQ.4) THEN
        IPROPS=5
        IPROPL=14
        IF (IPRINT.GE.1) WRITE(6,100) INTFLG,IPROPS,IPROPL
  100   FORMAT(/'  INTFLG = ',I2,' IS DEPRECATED EQUIVALENT TO ',
     1         'IPROPS = ',I2,' & IPROPL = ',I2)
      ELSEIF (INTFLG.EQ.8) THEN
        IPROPS=6
        IPROPL=1
        IF (IPRINT.GE.1) WRITE(6,100) INTFLG,IPROPS,IPROPL
      ELSEIF (INTFLG.NE.0) THEN
        IPROPS=MOD(INTFLG,100)
        IPROPL=INTFLG/100
      ENDIF

      IF (IPROPS.EQ.0 .AND. IPROPL.EQ.0) THEN
        IPROPS=6
C  LONG RANGE DEFAULT FOR MOLSCAT IS AIRY
        IF (CDRIVE.EQ.'M') THEN
          IPROPL=1
C  LONG RANGE DEFAULT FOR BOUND/FIELD IS LDMD
        ELSE
          IPROPL=6
        ENDIF
      ENDIF

C  NEED A LONG RANGE PROPAGATOR FOR BOUND/FIELD
      IF (CDRIVE.NE.'M' .AND. IPROPL.EQ.0) IPROPL=IPROPS

      IF (IPROPS.LT.-1 .OR. IPROPS.EQ.0 .OR. IPROPS.EQ.4 .OR.
     1    IPROPS.EQ.8 .OR. IPROPS.GT.9) THEN
        WRITE(6,101) 'IPROPS',IPROPS
  101   FORMAT(/'  *** ERROR: 'A6,' = ',I2,' IS NOT A KNOWN VALUE')
        STOP
      ENDIF
      IF (IPROPL.LT.-1 .OR. IPROPL.EQ.4 .OR. IPROPL.GT.14 .OR.
     1    IPROPL.EQ.8 .OR. (IPROPL.GT.9 .AND. IPROPL.LT.14)) THEN
        WRITE(6,101) 'IPROPL',IPROPL
        STOP
      ENDIF

      IF (IPROPL.NE.0) THEN
        IF (IPRINT.GE.1) WRITE(6,200) IPROPS,IPROPL
  200   FORMAT(/'  PROPAGATION ALGORITHMS FOR COUPLED EQUATIONS '
     1          'SPECIFIED BY IPROPS = ',I2,' AND IPROPL = ',I2)
      ELSE
        IF (IPRINT.GE.1) WRITE(6,201) IPROPS
  201   FORMAT(/'  PROPAGATION ALGORITHM FOR COUPLED EQUATIONS '
     1          'SPECIFIED BY IPROPS = ',I2)
      ENDIF

C  CHECK THAT THE SHORT RANGE PROPAGATOR IS AN ALLOWED VALUE
C
C  FOR BOUND/FIELD, ALLOWED VALUES ARE 5,6,7,9 (8 HAS ALREADY BEEN
C  CHECKED FOR)
      IF ((CDRIVE.NE.'M' .AND.
     1             (IPROPS.LT.5 .OR. IPROPS.GT.9)) .OR.
C
C  FOR MOLSCAT, ALLOWED VALUES ARE -1,2,3,5,6,7,9 (SOME OF THESE HAVE
C  ALREADY BEEN CHECKED FOR)
     2    (CDRIVE.EQ.'M' .AND. (IPROPS.EQ.1 .OR. IPROPS.GT.9))) THEN
        WRITE(6,*) ' PROPAGATOR ',IPROPS,
     1             ' IS NOT AVAILABLE AT SHORT RANGE'
        STOP
      ENDIF

C  CHECK THAT THE LONG RANGE PROPAGATOR IS AN ALLOWED VALUE
      IF (IPROPL.EQ.0) THEN
C  IT CAN BE THE SAME AS THE SHORT RANGE PROPAGATOR, BUT THIS IS THE SAME
C  AS USING ONE PROPAGATOR FOR THE WHOLE RANGE...
        IPROPL=IPROPS
      ENDIF

      IF (IPROPS.EQ.3 .AND. IPROPL.NE.3) THEN
        IF (IPRINT.GE.1)
     1    WRITE(6,*) ' THIS PROPAGATOR CANNOT BE COMBINED WITH A '//
     2               'DIFFERENT LONG RANGE PROPAGATOR, BECAUSE IT '//
     3               'ALREADY HAS A DIFFERENT IMPLEMENTATION OUTSIDE '//
     4               'RMID.'
        IF (IPRINT.GE.1) WRITE(6,*) ' UNSETTING LONG RANGE PROPAGATOR.'
        IPROPL=IPROPS
      ENDIF

      IF (IPROPL.EQ.14) THEN
        IF (IDIAG) THEN
          IV=.TRUE.
          IVP=.TRUE.
          IVPP=.TRUE.
          ISHIFT=.TRUE.
          IPERT=.TRUE.
        ENDIF
      ENDIF

C  CHECK THAT VALUES FOR RMATCH AND RMID HAVE BEEN SET/ARE OBTAINABLE FROM
C  WHATEVER HAS BEEN SET.
      ZRVFAC=.FALSE.

C  RVFAC IS ONLY USED FOR MOLSCAT
      IF (CDRIVE.EQ.'M') THEN
        IF ((IPROPS.EQ.3 .OR.
     1      (IPROPL.NE.0 .AND. IPROPL.NE.IPROPS)) .AND.
     2      RVFAC.GT.0.D0 .AND. IRMSET.GT.0) ZRVFAC=.TRUE.
      ENDIF

      IF (RMID.GE.RMAX .AND. .NOT.ZRVFAC) THEN
        IPROPL=IPROPS
      ENDIF

C  FOR BOUND/FIELD, IF RMATCH/RMID NOT SET, SET DEFAULT VALUES
      IF (CDRIVE.NE.'M' .AND. RMATCH.EQ.0D0) THEN
        IF (RMID.EQ.0D0) THEN
          IF (IPRINT.GE.1) THEN
            WRITE(6,*) ' *** NO MATCHING/SWITCHING POINTS HAVE BEEN ',
     1                 'SPECIFIED.'
            IF (RMIN.NE.0.D0) 
     1        WRITE(6,*) ' *** RMATCH WILL BE SET AT GEOMETRIC MEAN '//
     1                   'OF RMIN AND RMAX'
            IF (RMIN.EQ.0.D0)
     1        WRITE(6,*) ' *** RMATCH WILL BE SET AT RMAX/2'
          ENDIF
          RMATCH=-1.0D0
          RMID=-1.0D0
        ENDIF

C  FOR MOLSCAT, SET DEFAULT VALUE FOR RMID IF NECESSARY
      ELSEIF (CDRIVE.EQ.'M') THEN
        IF (RMID.EQ.1D30 .AND. .NOT.ZRVFAC) THEN
          IF (IPRINT.GE.1 .AND. IPROPL.NE.IPROPS) THEN
            WRITE(6,*) ' *** SWITCH POINT (RMID) HAS NOT BEEN SET '
            WRITE(6,*) ' *** SETTING IT TO 1.0D0'
          ENDIF
          RMID=1.0D0
        ENDIF
      ENDIF

C  FOR MOLSCAT, RMATCH IS NOT USED
      IF (CDRIVE.EQ.'M') RMATCH=RMID

C  IF ONE HAS NOT BEEN SET, SET IT TO BE EQUAL TO THE OTHER ONE.
      IF (RMATCH.EQ.0D0) THEN
        RMATCH=RMID
      ELSEIF (RMID.EQ.0D0) THEN
        RMID=RMATCH
      ENDIF

C  IF THE DIFFERENCE BETWEEN THEM IS LESS THAN ONE STEP, SET THEM TO BE
C  EQUAL TO THEIR MEAN
      IF (ABS(RMID-RMATCH).LE.DR) THEN
        RMID=(RMID+RMATCH)/2D0
        RMATCH=RMID
      ENDIF

C  THE LONG RANGE PROPAGATOR SHOULDN'T BE A DIFFERENT SHORT RANGE PROPAGATOR
C  FROM THE ONE USED AT SHORT RANGE.
      IF (IPROPL.NE.IPROPS .AND. IPROPL.NE.0 .AND. IPROPL.NE.1 .AND.
     1    IPROPL.NE.14) THEN
        WRITE(6,*) ' ARE YOU SURE YOU WANT TO USE THIS PROPAGATOR FOR',
     1            ' LONG RANGE ONLY? (IPROPL = ',IPROPL,').'
        WRITE(6,*) ' IF SO, CHANGE THE CODE!'
        STOP
      ENDIF

C  THE LONG AND SHORT RANGE PROPAGATORS MUST BOTH BE LOG-DERIVATIVE TYPE
      IF (IPROPL.EQ.1 .AND. IPROPS.NE.5 .AND. IPROPS.NE.6 .AND.
     1                      IPROPS.NE.7 .AND. IPROPS.NE.9) THEN
        WRITE(6,*) ' THIS COMBINATION OF PROPAGATORS IS NOT ALLOWED'
        STOP
      ENDIF

      IF (IPROPL.EQ.IPROPS .AND. RMATCH.NE.RMID .AND. DRLR.EQ.-1.D0)
     1  THEN
        IF (IPRINT.GE.1)
     1    WRITE(6,*) ' *** YOU HAVE REQUESTED A 3-SEGMENT '//
     2               'PROPAGATION WITH ONLY ONE PROPAGATOR ***'
        IF (IPRINT.GE.1)
     1    WRITE(6,*) ' *** USING THE VALUE OF RMATCH FOR RMID ***'
        RMID=RMATCH
      ENDIF

      CALL PRSTUP(IPROPS,IPROPL,RMIN,RMID,RMATCH,RMAX,
     1            DR,DRLR,DRAIRY,RST,REND,DIR,RINIT,TOLHI)
      DO ISEG=1,NSEGS
        IF (IFLG(ISEG).EQ.9) THEN
          CALL MGISEL(IMGSEL)
          EXIT
        ENDIF
      ENDDO
      IF (IPRINT.LE.0) RETURN

C  FOR MOLSCAT, ALL PROPAGATIONS ARE TOWARDS RMAX
      IF (CDRIVE.EQ.'M') THEN
        WRITE(6,90) 'COUPLED EQUATIONS WILL BE PROPAGATED OUTWARDS ',
     1              'IN',NSEGS,'SEGMENT',PLUR(MIN(NSEGS,2))
C
C  FOR BOUND/FIELD, ALL PROPAGATIONS ARE TOWARDS RMATCH
      ELSE
        WRITE(6,90) 'COUPLED EQUATIONS WILL BE PROPAGATED TOWARDS ',
     1              'RMATCH IN',NSEGS,'SEGMENTS'
      ENDIF
   90 FORMAT(/2X,A,A,1X,I1,1X,A:,A)

      DO ISEG=1,NSEGS
        RBEGIN=VST(ISEG)
        RFIN=VEND(ISEG)
        NAMST=RST(ISEG)
        NAMEND=REND(ISEG)
        IF (IDIR(ISEG).EQ.-1) THEN
          RBEGIN=VEND(ISEG)
          RFIN=VST(ISEG)
          NAMST=REND(ISEG)
          NAMEND=RST(ISEG)
        ENDIF
        WRITE(6,1000) ' SEGMENT ',ISEG,' WILL BE PROPAGATED ',
     1                DIR(ISEG),'WARDS'
 1000   FORMAT(2X,118('+')/1X,A,I1,A,A3,A/)

        TXTMIN='FROM '//NAMST//' = '
        WRITE(VALMIN,'(F9.2)') RBEGIN
        FMTMIN='A,1X,A9'
        TXTMAX='TO '//NAMEND//' = '
        TXTADD=' '
        VALMAX=RFIN
        FMTMAX='A,A,1X,F9.2'

        IF (NAMST.EQ.'RMIN' .AND. IRMSET.GT.0) THEN
          TXTMIN='FROM RMIN CHOSEN USING IRMSET ='
          WRITE(VALMIN,'(I3)') IRMSET
          FMTMIN='A,1X,A3'
        ELSEIF (NAMST.EQ.'RMID' .AND. ZRVFAC) THEN
          TXTMIN='FROM VALUE OF RMID CHOSEN USING RVFAC ='
          WRITE(VALMIN,'(F7.2)') RVFAC
          FMTMIN='A,1X,A7'
        ENDIF

        IF (NAMEND.EQ.'RMID' .AND. ZRVFAC) THEN
          TXTMAX='TO VALUE OF RMID CHOSEN USING RVFAC ='
          VALMAX=RVFAC
          FMTMAX='A,A,1X,F7.2'
        ELSEIF (NAMEND.EQ.'RMAX' .AND. IRXSET.GT.0) THEN
          TXTMAX='TO WHICHEVER IS LARGER OF'
          TXTADD='OUTERMOST CENTRIFUGAL TURNING POINT IN OPEN '//
     1           'CHANNELS, AND RMAX, WHICH ='
          VALMAX=RMAX
          FMTMAX='A/2X,A,1X,F9.2'
        ENDIF

        IF (RMATCH.EQ.-1.D0 .AND. NAMEND.EQ.'RMATCH' .AND. IRXSET.GT.0)
     1  THEN
          TXTMAX='TO MATCHING POINT'
          IF (RMIN.NE.0.D0) THEN
            TXTADD='AT GEOMETRIC MEAN OF RMIN AND RMAX'
          ELSE
            TXTADD='AT RMAX/2'
          ENDIF
          FMTMAX='A/2X,A'
          F1000='(2X,'//TRIM(FMTMIN)//',2X,'//TRIM(FMTMAX)//',/)'
        
          WRITE(6,FMT=F1000) TRIM(TXTMIN),VALMIN,TRIM(TXTMAX),
     1                       TRIM(TXTADD)
        ELSE
          F1000='(2X,'//TRIM(FMTMIN)//',2X,'//TRIM(FMTMAX)//',/)'
        
          WRITE(6,FMT=F1000) TRIM(TXTMIN),VALMIN,TRIM(TXTMAX),
     1                       TRIM(TXTADD),VALMAX
        ENDIF

        DRTEMP=DRPR(ISEG)
        IF (IFLG(ISEG).EQ.-1) THEN
          WRITE(6,299) STEST,NGMP
  299     FORMAT(/'  EQUATIONS SOLVED BY WKB APPROXIMATION WITH ',
     1           'GAUSS-MEHLER INTEGRATION.  SEE R. T PACK, ',
     2           'JCP 60, 633 (1974).'//'  NOTE THAT THIS IS ',
     3           'IMPLEMENTED ONLY FOR ONE CHANNEL CASES, E.G., ',
     4           'IOS CALCULATIONS.'//
     5           '  INTEGRATION PARAMETERS ARE:',5X,
     6           'STEST =',E14.4/35X,'NGMP =',I6,' (',I2,')',I3)

        ELSEIF (IFLG(ISEG).EQ.1) THEN
          IF (DRPR(ISEG).EQ.-1.D0) DRTEMP=DRPR(ISEG-1)
          WRITE(6,310)
          IF (TOLHI.LT.1.D0) THEN
            WRITE(6,312) RINIT(ISEG),DRTEMP,TOLHI,POWRX
          ELSEIF (STEPS.GT.0.D0) THEN
            WRITE(6,318) TOLHI
  318 FORMAT('  STEP SIZE GROWS GEOMETRICALLY WITH INCREASING R, ',
     1         'WITH RATIO TOLHI = ',F9.6)
          ELSE
            IF (ISEG.EQ.3 .AND. IFLG(2).EQ.1 .AND. 
     1          RINIT(3).EQ.RINIT(2)) THEN
              WRITE(6,313) 'SIZE OF LAST GEOMETRIC STEP OF PREVIOUS '//
     1                     'PROPAGATION SEGMENT',TOLHI
            ELSE
              WRITE(6,313) RINIT(ISEG),TOLHI
            ENDIF
            NAPSTP=0
            RENDAI=GEOSTP(VST(ISEG),VEND(ISEG),DRTEMP,TOLHI,
     1                     NAPSTP)
            IF (VEND(ISEG)-RENDAI.GT.REXTRA) THEN
              IF (IDIR(ISEG).EQ.1) THEN
                WRITE(6,314) RENDAI,REND(ISEG),VEND(ISEG)
              ELSE
                WRITE(6,315) REND(ISEG),VEND(ISEG),RENDAI
              ENDIF
            ELSE
              IF (VEND(ISEG)-RENDAI.GT.RWARN)
     1          WRITE(6,316) REND(ISEG),RENDAI
              VEND(ISEG)=RENDAI
              IF (IDIR(ISEG).EQ.1) THEN  
                RFIN=RENDAI
              ELSE
                RBEGIN=RENDAI
              ENDIF
              IF (ISEG.LT.NSEGS) VST(ISEG+1)=RENDAI
            ENDIF
          ENDIF
  310     FORMAT('  COUPLED EQUATIONS SOLVED BY VARIABLE STEP ',
     1           'AIRY METHOD.'/'  ALL PUBLICATIONS RESULTING FROM ',
     2           'THE USE OF THIS PROPAGATOR SHOULD REFERENCE'/
     3           '  M.H. ALEXANDER AND D.E. MANOLOPOULOS,  ',
     4           'J CHEM PHYS 86, 2044 (1987).')
  312   FORMAT(/'  INITIAL STEP SIZE TAKEN FROM ',A,' = ',1P,G10.3/
     1         29X,'WITH TOLHI = ',E9.2,9X,'POWRX =',0PF4.1/
     2        '  TOLHI.LT.1  --  AIRY STEPS ADJUSTED TO MAINTAIN',
     3       ' APPROX. ACCURACY VIA PERTURBATION THEORY AND POWRX.')
  313   FORMAT(/'  SMALLEST STEP SIZE TAKEN FROM ',A/
     1         '  STEP SIZE GROWS GEOMETRICALLY WITH INCREASING R, ',
     2         'WITH RATIO TOLHI = ',F9.6)
  314   FORMAT(/'  A FINAL STEP IS TAKEN FROM ',1P,G14.7,' TO ',A,' = ',
     1         G14.7,' TO COMPLETE THE PROPAGATION SEGMENT')
  315   FORMAT(/'  AN INITIAL STEP IS TAKEN FROM ',A,' = ',1P,G12.5,
     1         ' TO ',G12.5,' BEFORE STARTING THE GEOMETRIC REDUCTION ',
     2         'IN STEP SIZE')
  316   FORMAT('  ',A,' IS SHIFTED SLIGHTLY TO ',1P,G15.8)

        ELSEIF (IFLG(ISEG).EQ.2) THEN
          WRITE(6,320) STEST,STEPS,STABIL
  320     FORMAT(/'  COUPLED EQUATIONS SOLVED BY METHOD OF DEVOGELAERE.'
     1           /'  PROPAGATION PARAMETERS ARE: ',3X,
     2           'STEST  =',E9.2/33X,'STEPS  =',
     3           F9.1,'  (PER WAVELENGTH)'/33X,'STABIL =',F9.1,
     4           '  (STEPS PER STABILIZATION)')

        ELSEIF (IFLG(ISEG).EQ.3) THEN
          WRITE(6,330) DRPR(ISEG),VTOL,RMID,MAXSTP
  330     FORMAT(/'  COUPLED EQUATIONS SOLVED BY WALKER-LIGHT R-MATRIX',
     1         ' PROPAGATOR ALGORITHM'//'  PROPAGATION PARAMETERS ARE:',
     2           3X,' DR    = ',F9.3,6X,'VTOL   =',E9.2
     3           /32X,' RMID  = ',F8.2,7X,'MAXSTP =',I9)
          IF (IRMSET.GT.0 .AND. SHRINK.EQ.1) THEN
            WRITE(6,1400)
 1400       FORMAT(22X,'AND DEEPLY CLOSED CHANNELS DROPPED IN ',
     1             'LONG-RANGE REGION')
            IF (NNRG.NE.1 .AND. ISCRU.NE.0) WRITE(6,1410)
 1410       FORMAT(22X,'NOTE THAT BASIS SET CONTRACTION IS ',
     1             'PERFORMED FOR ENERGY(1),'/22X,'SO THAT ',
     2             'SUBSEQUENT ENERGIES MUST NOT BE SIGNIFICANTLY ',
     3             'HIGHER.')
        ENDIF


        ELSEIF (IFLG(ISEG).EQ.14) THEN
          IF (DRPR(ISEG).EQ.-1.D0) DRTEMP=DRPR(ISEG-1)
          WRITE(6,350)
          WRITE(6,414) RMID,RMAX,DRMAX,ALPHA1,XSQMAX,ALPHA2,
     1                 TOLHI,IALPHA,ISHIFT,IV,IPERT,IVP,IALFP,IVPP,
     2                 ISYM,NUMDER
  414     FORMAT(/'  CHANGING TO VARIABLE INTERVAL / VARIABLE ',
     1           'STEP METHOD AT LONG RANGE'//'  PROPAGATION ',
     2           'PARAMETERS ARE:    RVIVAS =',G9.2,8X/
     3           33X,'RMAX   =',F9.2,8X,'DRMAX  = ',F8.2/
     4           58X,'ALPHA1 =  ',F7.2/
     5           33X,'XSQMAX =',G9.2,8X,'ALPHA2 =  ',F7.2/
     6           33X,'TOLHI  =',G9.2,8X,'IALPHA = ',I8/
     7           33X,'ISHIFT =',L9,8X,'IV     = ',L8/
     8           33X,'IPERT  =',L9,8X,'IVP    = ',L8/
     9           33X,'IALFP  =',L9,8X,'IVPP   = ',L8/
     A           33X,'ISYM   =',L9,8X,'NUMDER = ',L8)

        ELSEIF (IFLG(ISEG).EQ.5) THEN
          WRITE(6,350)
  350     FORMAT('  COUPLED EQUATIONS SOLVED BY LOG DERIVATIVE ',
     1           'METHOD OF JOHNSON')

        ELSEIF (IFLG(ISEG).EQ.6) THEN
          WRITE(6,360)
  360     FORMAT('  COUPLED EQUATIONS SOLVED BY DIABATIC ',
     1           'MODIFIED LOG DERIVATIVE METHOD OF MANOLOPOULOS')

        ELSEIF (IFLG(ISEG).EQ.7) THEN
          WRITE(6,370)
  370     FORMAT('  COUPLED EQUATIONS SOLVED BY QUASIADIABATIC ',
     1           'MODIFIED LOG DERIVATIVE METHOD OF MANOLOPOULOS')

        ELSEIF (IFLG(ISEG).EQ.9) THEN
          WRITE(6,390)
  390     FORMAT('  COUPLED EQUATIONS SOLVED BY SYMPLECTIC LOG-',
     1           'DERIVATIVE METHOD OF MANOLOPOULOS AND GRAY')
          IF (IMGSEL.EQ.4) THEN
            WRITE(6,391)
          ELSEIF (IMGSEL.EQ.5) THEN
            WRITE(6,392)
          ENDIF
  391     FORMAT('  USING THE FIVE-STEP FOURTH-ORDER METHOD OF CALVO ',
     1           'AND SANZ-SERNA')
  392     FORMAT('  USING THE SIX-STEP FIFTH-ORDER METHOD OF ',
     1           'MCLACHLAN AND ATELA')
        ENDIF
        IF (IFLG(ISEG).GE.5) THEN
          IF (STEPS.GT.0.D0) THEN
            WRITE(6,400) 'STEPS',STEPS,' (PER WAVELENGTH)'
          ELSE
            WRITE(6,400) 'DR',DRTEMP
          ENDIF
        ENDIF
  400   FORMAT(/'  PROPAGATION STEP SIZE DETERMINED USING ',A,' = ',
     1         1P,G10.3:A)

C  WRITE MESSAGES ABOUT Y MATRIX INITIALISATION
        IF (ISEG.EQ.1) THEN
          WRITE(6,*)
          IF (ADIAMN) THEN
            WRITE(6,500) 'RMIN','OUTWARDS'
          ELSE
            WRITE(6,510) 'OUTWARD'
          ENDIF
          IF (BCYCMN.LT.-1D-8) THEN
            WRITE(6,520) 'CLOSED'
          ELSE
            WRITE(6,530) 'CLOSED',BCYCMN
          ENDIF
          WRITE(6,530) 'OPEN',BCYOMN
        ELSEIF (IDIR(ISEG).EQ.-1 .AND. IDIR(ISEG-1).EQ.1) THEN
          WRITE(6,*)
          IF (ADIAMX) THEN
            WRITE(6,500) 'RMAX','INWARDS'
          ELSE
            WRITE(6,510) 'INWARDS'
          ENDIF
          IF (BCYCMX.LT.-1D-8) THEN
            WRITE(6,520) 'CLOSED'
          ELSE
            WRITE(6,530) 'CLOSED',BCYCMX
          ENDIF
          WRITE(6,530)   '  OPEN',BCYOMX
        ENDIF
  500   FORMAT('  LOG-DERIVATIVE MATRIX WILL BE INITIALISED IN THE ',
     1         'LOCAL EIGENBASIS FOR ',A,' IN THE ',A,
     2         ' PROPAGATION PART')
  510   FORMAT('  LOG-DERIVATIVE MATRIX WILL BE INITIALISED IN THE '
     1         'PROPAGATION BASIS FOR ',A,' PROPAGATION PART')
  520   FORMAT('  LOCALLY ',A,' CHANNELS WILL BE INITIALISED',
     1         ' WITH A WKB BOUNDARY CONDITION')
  530   FORMAT('  LOCALLY ',A,' CHANNELS WILL BE INITIALISED',
     1         ' WITH THE VALUE ',1PE14.7)
        IF (ILDSVU.GT.0) THEN
          IF (IFLG(ISEG).NE.2 .AND.
     1        (IFLG(ISEG).LT.4 .OR. IFLG(ISEG).GT.9)) THEN
            WRITE(6,*) ' ONLY PROPAGATORS 2 AND 4-9 CAN STORE MATRICES'
            WRITE(6,*) ' TO UNIT ILDSVU.  ILDSVU SET TO 0.'
            ILDSVU=0
          ENDIF
        ENDIF
C
      ENDDO
C
      WRITE(6,700)
  700 FORMAT(2X,118('+'))
      RETURN

      END
