      SUBROUTINE SPROPN(WIDTH, EIGNOW, HP, Y1, Y4, Y2, NCH)
C  This subroutine is part of the MOLSCAT, BOUND and FIELD suite of programs
C
C  AUTHOR:  MILLARD ALEXANDER
C  CURRENT REVISION DATE: 23-9-87
C-----------------------------------------------------------------------
C  THIS SUBROUTINE CALCULATES THE DIAGONAL MATRICES TO PROPAGATE THE
C  LOG-DERIVATIVE MATRIX THROUGH THE CURRENT INTERVAL
C  THE KEY EQUATIONS, REPRODUCED BELOW, ARE TAKEN FROM
C  M. ALEXANDER AND D. MANOLOPOULOS, "A STABLE LINEAR REFERENCE
C  POTENTIAL ALGORITHM FOR SOLUTION ..."
C-----------------------------------------------------------------------
C  VARIABLES IN CALL LIST:
C  WIDTH:      WIDTH OF THE CURRENT INTERVAL
C  EIGNOW:     ARRAY CONTAINING THE WAVEVECTORS
C              THESE ARE DEFINED BY EQ. (6) OF M.ALEXANDER,
C              J. CHEM. PHYS. 81,4510 (1984)
C  HP:         ARRAY CONTAINING THE NEGATIVE OF DIAGONAL ELEMENTS OF THE
C              DERIVATIVE OF THE WAVEVECTOR MATRIX AT THE CENTER OF THE
C              CURRENT INTERVAL [SEE EQ. (9) OF M.ALEXANDER,
C              J. CHEM. PHYS. 81,4510 (1984)]
C              THIS ARRAY THUS CONTAINS THE DERIVATIVE OF THE DIAGONAL
C              ELEMENTS OF THE TRANSFORMED HAMILTONIAN MATRIX
C  Y1, Y2, Y4: ON RETURN, CONTAIN THE DESIRED DIAGONAL ELEMENTS OF THE
C              IMBEDDING PROPAGATOR
C  NCH:        THE NUMBER OF CHANNELS, THIS EQUALS THE DIMENSIONS OF THE
C              EIGNOW, HP, Y1, Y4, AND B ARRAYS
C-----------------------------------------------------------------------
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DOUBLE PRECISION DALPHA, DBETA, DHALF, DONETH, DROOT, DSLOPE,
     :                 DTWOTH, DLZETA, DMMOD1, DMMOD2, DNMOD1, DNMOD2,
     :                 DPI, DX1, DX2, DZETA1, DZETA2, DPHI1, DPHI2,
     :                 DTHET1, DTHET2, DTNHFM, DTNHFP, DARG, DCAY, DKAP,
     :                 OFLOW,X1,X2
      DIMENSION EIGNOW(1), HP(1), Y1(1), Y2(1), Y4(1)
      INTEGER I, NCH
      DATA     DONETH,             DTWOTH,     DHALF
     :  / 0.333333333333333D0, 0.666666666666667D0, 0.5D0 /
      DATA  DPI / 3.1415926535897932D0 /
C  AC REFERS TO THE AIRY CRITERION, HISTORICALLY SET AT 20.0, BUT SINCE
C  11/2015 CHANGED TO 15.0 TO REDUCE JITTER
      PARAMETER (AC=15.D0)
C  THE PARAMETER OFLOW IS THE LARGEST VALUE OF X FOR WHICH EXP(X)
C  DOES NOT CAUSE A SINGLE PRECISION OVERFLOW
C                                     N
C  A REASONABLE VALUE IS X = [ LN(2) 2 ] - 5, WHERE N IS THE NUMBER OF
C  BITS CHARACTERISTIC OF A FLOATING POINT NUMBER
      DATA OFLOW / 83.D0 /
C  NOW DETERMINE B_MIN1, Y1, AND Y4 PARAMETERS FOR ALL NCH CHANNELS
      DO 10  I = 1, NCH
        DSLOPE = HP(I)
        DARG = 1.E+10
        IF (DSLOPE.NE.0.D0)
     :    DARG = LOG(ABS(EIGNOW(I))) - LOG(ABS(DSLOPE))
        IF (DARG.GT.AC) THEN
C  HERE IF THE RELATIVE SLOPE IN THE WAVEVECTOR MATRIX IS LESS THAN
C  EXP**(-AC) IN MAGNITUDE, IN WHICH CASE THE POTENTIAL IS ASSUMED TO BE
C  CONSTANT
          IF (EIGNOW(I).GT.0) THEN
C  HERE FOR CLASSICALLY ALLOWED REGION (SINES AND COSINES AS REFERENCE
C  SOLUTIONS)
            DCAY = SQRT(EIGNOW(I))
            DARG = DCAY * WIDTH
            Y1(I) = DCAY / TAN(DARG)
            Y4(I) = Y1(I)
            Y2(I) = DCAY / SIN(DARG)
          ELSE
C  HERE FOR CLASSICALLY FORBIDDEN REGION (HYPERBOLIC SINES AND COSINES
C  ARE REFERENCE SOLUTIONS)
            DKAP = SQRT( - EIGNOW(I))
            DARG = DKAP * WIDTH
            Y1(I) = DKAP / TANH(DARG)
            Y4(I) = Y1(I)
            Y2(I) = DKAP / SINH(DARG)
          ENDIF
        ELSE
C  HERE IF THE RELATIVE SLOPE IN THE WAVEVECTOR MATRIX IS GREATER THAN
C  EXP.**(-AC) IN MAGNITUDE, IN WHICH CASE A LINEAR REFERENCE POTENTIAL IS
C  USED WITH AIRY FUNCTIONS AS REFERENCE SOLUTIONS
          DROOT = ( ABS(DSLOPE) ) ** DONETH
          DALPHA   = SIGN(DROOT, DSLOPE)
          DBETA = - EIGNOW(I) / DSLOPE
          DX1 = DALPHA * ( DBETA - WIDTH * DHALF)
          DX2 = DALPHA * ( DBETA + WIDTH * DHALF)
          IF (DX1.GT.0.D0) DZETA1 = DTWOTH * DX1 * SQRT(DX1)
          IF (DX2.GT.0.D0) DZETA2 = DTWOTH * DX2 * SQRT(DX2)
          CALL AIRYMP(DX1, DTHET1, DPHI1, DMMOD1, DNMOD1)
          CALL AIRYMP(DX2, DTHET2, DPHI2, DMMOD2, DNMOD2)
          X1 = DX1
          X2 = DX2
C-----------------------------------------------------------------------
          IF (X1.LE.0.D0 .AND. X2.LE.0.D0) THEN
C  HERE FOR BOTH X_1 AND X_2 NEGATIVE (SEE EQNS 38A, 38B, 38C)
C
            B =  DMMOD1 * DMMOD2 * SIN(DTHET2 - DTHET1)
            Y2(I) = 1.D0 / B
            Y1(I) = DNMOD1 * SIN(DPHI1 - DTHET2)
     :            / (DMMOD1 * SIN(DTHET2 - DTHET1) )
            Y4(I) = DNMOD2 * SIN(DPHI2 - DTHET1)
     :            / (DMMOD2 * SIN(DTHET2 - DTHET1) )
C-----------------------------------------------------------------------
          ELSEIF (X1.GT.0.D0 .AND. X2.GT.0.D0) THEN
C  HERE FOR BOTH X_1 AND X_2 POSITIVE (SEE EQNS 39A, 39B, 39C AND 40,
C  BUT THET1/2 CORRESPOND TO CHI1/2 AND PHI1/2 CORRESPOND TO ETA1/2)
C
            TNHFAC = TANH(DZETA2 - DZETA1)
            BFACT = SINH(DTHET1 - DTHET2) +
     :              TNHFAC * SINH(DTHET1 + DTHET2)
            DLZETA = ABS(DZETA2 - DZETA1)
            Y2(I) = 0.
            IF (DLZETA.LE.OFLOW) THEN
              B = DMMOD1 * DMMOD2 * COSH(DZETA2 - DZETA1) * BFACT
              Y2(I) = 1.D0 / B
            ENDIF
            Y1(I) = DNMOD1 * (SINH(DTHET2 - DPHI1)
     :            - TNHFAC * SINH(DTHET2 + DPHI1) ) / (DMMOD1 * BFACT)
            Y4(I) = DNMOD2 * (SINH(DTHET1 - DPHI2)
     :            + TNHFAC * SINH(DTHET1 + DPHI2) ) / (DMMOD2 * BFACT)
C-----------------------------------------------------------------------
          ELSEIF (X1.GT.0.D0 .AND. X2.LE.0.D0) THEN
C  HERE FOR X_1 POSITIVE AND X_2 NEGATIVE (SEE EQNS 41A, 41B, 41C AND 42,
C  BUT THET1 CORRESPONDS TO CHI1 AND PHI1 CORRESPONDS TO ETA1
C
            DTNHFP = 1 + TANH(DZETA1)
            DTNHFM = 1 - TANH(DZETA1)
            BFACT = COSH(DTHET1) * ( - COS(DTHET2) * DTNHFP
     :            + TANH(DTHET1) * SIN(DTHET2) * DTNHFM)
            Y2(I) = 0.
            IF (ABS(DZETA1).LE.OFLOW) THEN
              Y2(I) = COSH(DZETA1) * (DMMOD1 * DMMOD2 * BFACT)
              Y2(I) = 1.D0 / Y2(I)
            ENDIF
            Y1(I) = (DNMOD1 * COSH(DPHI1) * ( COS(DTHET2) * DTNHFP
     :            - TANH(DPHI1) * SIN(DTHET2) * DTNHFM) )
     :            / (DMMOD1 * BFACT)
            Y4(I) = (DNMOD2 * COSH(DTHET1) * ( - COS(DPHI2) * DTNHFP
     :            + TANH(DTHET1) * SIN(DPHI2) * DTNHFM) )
     :            / (DMMOD2 * BFACT)
C-----------------------------------------------------------------------
          ELSEIF (X2.GT.0.D0 .AND. X1.LE.0.D0) THEN
C  HERE FOR X_1 NEGATIVE AND X_2 POSITIVE (SEE EQNS 43A, 43B, 43C AND
C  44, BUT THET2 CORRESPONDS TO CHI2 AND PHI2 CORRESPONDS TO ETA2
C
            DTNHFP = 1 + TANH(DZETA2)
            DTNHFM = 1 - TANH(DZETA2)
            BFACT = COSH(DTHET2) * ( COS(DTHET1) * DTNHFP
     :            - TANH(DTHET2) * SIN(DTHET1) * DTNHFM)
            Y2(I) = 0.
            IF (ABS(DZETA2).LE.OFLOW) THEN
              Y2(I) =  COSH(DZETA2) * (DMMOD1 * DMMOD2 * BFACT)
              Y2(I) = 1.D0 / Y2(I)
            ENDIF
            Y4(I) = (DNMOD2 * COSH(DPHI2) * ( COS(DTHET1) * DTNHFP
     :            - TANH(DPHI2) * SIN(DTHET1) * DTNHFM) )
     :            / (DMMOD2 * BFACT)
            Y1(I) = (DNMOD1 * COSH(DTHET2) * ( - COS(DPHI1) * DTNHFP
     :            + TANH(DTHET2) * SIN(DPHI1) * DTNHFM) )
     :            / (DMMOD1 * BFACT)
C-----------------------------------------------------------------------
          ENDIF
          Y1(I) = DALPHA * Y1(I)
          Y4(I) = DALPHA * Y4(I)
          Y2(I) = DALPHA * Y2(I) / DPI
C  AT THIS POINT THE Y1, Y2, AND Y4 PROPAGATORS CORRESPOND IDENTICALLY
C  TO EQS. (38)-(44) OF M. ALEXANDER AND D. MANOLOPOULOS, "A STABLE
C  LINEAR REFERENCE POTENTIAL ALGORITHM FOR SOLUTION ..."
        ENDIF
10    CONTINUE
      RETURN
      END
