      SUBROUTINE RMTPRP(NBAS,NSQBAS,MXLAM,NPOTL,
     1                  R,VECNOW,Q,VL,IV,EINT,CENT,WVEC,JSINDX,L,NB,P,
     2                  W,VECOLD,EIGOLD,EIGNOW,DIAG,R1,R2,
     3                  R3,R4,N1,N2,CLOSED,RUP,
     4                  NOPMAX,DEEP,IK,ICODE,IPRINT,NV)
C  Copyright (C) 2018 J. M. Hutson & C. R. Le Sueur
C  Distributed under the GNU General Public License, version 3
      USE potential, ONLY: EPSIL
C
C  THIS ROUTINE SOLVES THE COUPLED EQUATIONS USING THE R-MATRIX
C  PROPAGATOR METHOD. (SEE STECHEL, WALKER & LIGHT, J. CHEM. PHYS. 69 3518 1978)
C  THIS VERSION USES A CONSTANT STEP SIZE DR FOR R < RMID, AND
C  DR*R/RMID FOR R > RMID. THE CONSTANT-STEP METHOD IS RECOMMENDED BY
C  ANDERSON, J.CHEM.PHYS. 77,4431(1982).
C  VTOL IS A TOLERANCE PARAMETER FOR THE LARGEST OFF-DIAGONAL
C  ELEMENT OF THE TRANSFORMATION MATRIX, USED TO DECIDE WHEN TO
C  STOP INTEGRATING.
C  FACT AND DRMAX ARE NOT USED IN THIS VERSION.
C
C  BELOW IS FROM JM Hutson JAN 93 W/ NEW MATRIX ROUTINES (--.V11X.LKED)
C  MODIFIED BY S Green (1/27/93) TO USE /MEMORY/ ..,IVLFL,
C   14 JULY 86 VERSION FROM JM Hutson
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL IREAD,IWRITE,CNTRCT,GOTTP
      INTEGER IPRINT
      DIMENSION R(NSQBAS),VECNOW(NSQBAS),Q(NSQBAS),VL(NV),IV(NV),
     1          EINT(NBAS),CENT(NBAS),WVEC(NBAS),JSINDX(NBAS),L(NBAS),
     2          NB(NBAS),P(MXLAM),W(NSQBAS),VECOLD(NSQBAS),EIGOLD(NBAS),
     3          EIGNOW(NBAS),DIAG(NBAS),R1(NBAS),R2(NBAS),R3(NBAS),
     4          R4(NBAS),CLOSED(NBAS),N1(*),N2(*)
C
      COMMON /VLFLAG/ IVLFL
C
C  COMMON BLOCK FROM DRIVER
      COMMON /DRIVE / DUMMY(4),RMIN,RMAX,XEPS,DR,
     1                DRMAX,RMID,RMATCH,FACT,RTURN,VTOL,ESHIFT,
     2                ERED,RMLMDA,NOPEN,JKEEP,ISCRU,MAXSTP,ILDSVU
C
C  ----------------------------------------------------------------
C  SET UP TO USE UNIT  (ISCRU)
      IREAD  = ICODE.EQ.2 .AND. ISCRU.GT.0
      IWRITE = ICODE.EQ.1 .AND. ISCRU.GT.0
C  ---------------------------------------------------------------
C
      N=NBAS
      NSQ=NSQBAS
      GOTTP=.FALSE.
      IF (XEPS.LE.0.D0 .OR. ISCRU.LE.0) GOTO 100
      IF (IVLFL.GT.0) THEN
        IF (IWRITE) WRITE(ISCRU) JSINDX,L,EINT,CENT,VL,IV
        IF (IREAD)   READ(ISCRU) JSINDX,L,EINT,CENT,VL,IV
      ELSE
        IF (IWRITE) WRITE(ISCRU) JSINDX,L,EINT,CENT,VL
        IF (IREAD)   READ(ISCRU) JSINDX,L,EINT,CENT,VL
      ENDIF
C  SORT CHANNELS BY ASYMPTOTIC ENERGY
      CALL WVCALC(WVEC,WMAX,ERED,EINT,NOPEN,N)
      CALL CHNSRT(NB,EINT,N)
 100  IF (NOPEN.EQ.0) RETURN
C
      NOPSQ=NOPEN*NOPEN
C
C  ZERO CLOSED ARRAY
      DO 120 I=1,N
        CLOSED(I)=0.D0
  120 CONTINUE
C
C  ICODE=1/2 MEANS PROPAGATION ISN'T/IS TO BE DONE WITH STORED DATA
      IF (ICODE.EQ.1 .AND. IPRINT.GE.4) WRITE(6,150) RMIN
  150 FORMAT(/'  START R-MATRIX PROPAGATOR AT RMIN =',F8.5)
      IF (IPRINT.GE.20 .AND. ICODE.EQ.1) WRITE(6,160)
  160 FORMAT(/'    KSTEP    RNOW       EIGVAL(1)      EIGVAL(N)'/)
C
      IF (IREAD) GOTO 170

C  CALCULATE R-MATRIX AT FIRST STEP.
      RNOW=RMIN
      RNOW=RNOW+0.5D0*DR
      DRNOW=DR
      DRNEW=DRNOW
      KSTP=1
      CALL WAVMAT(W,NBAS,RNOW,P,VL,IV,ERED,EINT,CENT,RMLMDA,DIAG,
     1            MXLAM,NPOTL,IPRINT)
      IFAIL=0
      CALL F02ABF(W,NBAS,NBAS,EIGOLD,VECOLD,NBAS,R1,IFAIL)
      IF (ISCRU.LE.0) GOTO 190

      WRITE(ISCRU) RNOW,DRNOW
      WRITE(ISCRU) KSTP,EIGOLD
      WRITE(ISCRU) DRNEW
      GOTO 190
C
  170 READ(ISCRU) RNOW,DRNOW
      READ(ISCRU) KSTP,EIGOLD
      READ(ISCRU) DRNEW
      DO 180 I=1,N
        EIGOLD(I)=EIGOLD(I)-ESHIFT
  180 CONTINUE
C
C  NO INITIAL R-MATRIX SUPPLIED. INITIALISE IT.
  190 DO 200 I=1,NSQ
  200   R(I)=0.D0
      IND=-N
      DO 210 I=1,N
        IND=IND+N+1
        R(IND)=1.D0/SQRT(ABS(EIGOLD(I)))
  210 CONTINUE
      GOTO 230
C
C  TRANSFORM SUPPLIED R-MATRIX TO LOCAL BASIS
      CALL TRNSFM(VECOLD,R,Q,N,.FALSE.,.TRUE.)
C
  230 ITRY=-1
      DLAST=1.D36
C
C  PROPAGATE R-MATRIX
      DO 430 KSTEP=2,MAXSTP
        NOLD=N
        ROLD=RNOW
        RNOW=RNOW+0.5D0*(DRNOW+DRNEW)
        DRNOW=DRNEW
        IF (.NOT.IREAD) GOTO 250
C
C  IF ICODE = 2 READ EIGNOW AND Q MATRIX FROM DISK
        READ(ISCRU) KSTP,EIGNOW,Q
        DO 240 I=1,N
          EIGNOW(I)=EIGNOW(I)-ESHIFT
  240   CONTINUE
        GOTO 290
C
C  IF ICODE = 1 CALCULATE EIGNOW AND Q MATRIX
  250   CALL WAVMAT(W,N,RNOW,P,VL,IV,ERED,EINT,CENT,RMLMDA,DIAG,
     1              MXLAM,NPOTL,IPRINT)
        IF (XEPS.LE.0.D0 .OR. GOTTP) GOTO 270
C
C  LOOK FOR TURNING POINT OR POTENTIAL MINIMUM IN LOWEST-LYING
C  CHANNEL  (WHICHEVER OCCURS AT SMALLEST R).
C  SAVE INFORMATION FOR USE IN NEXT CALL TO RMSET.
        IF (DIAG(IK).GT.0.D0 .AND. DIAG(IK).LT.DLAST) GOTO 260
        GOTTP=.TRUE.
        RTURN=RNOW
  260   DLAST=DIAG(IK)
C
  270   IFAIL=0
        CALL F02ABF(W,N,N,EIGNOW,VECNOW,N,R1,IFAIL)
        CALL SGNCHK(VECOLD,VECNOW,N)
        CALL DGEMUL(VECOLD,N,'T',VECNOW,N,'N',Q,N,
     1              N,N,N)
        IF (ISCRU.GT.0) WRITE(ISCRU) KSTEP,EIGNOW,Q
        DO 280 I=1,NSQ
  280     VECOLD(I)=VECNOW(I)
  290   CONTINUE
C
C  CALCULATE PROPAGATOR FOR R-MATRIX.
        NOPLOC=0
        DO 320 I=1,N
          EIG=EIGNOW(I)
          FLAM=SQRT(ABS(EIG))
          IF (EIG.GE.0.D0) GOTO 300
          R1(I) = -1.D0/(FLAM*TAN(DRNEW*FLAM))
          R2(I) = -1.D0/(FLAM*SIN(DRNEW*FLAM))
          NOPLOC=NOPLOC+1
          GOTO 310

  300     R1(I) = 1.D0/(FLAM*TANH(DRNEW*FLAM))
          R2(I) = 1.D0/(FLAM*SINH(DRNEW*FLAM))
          IF (RNOW.GT.1.5D0*RTURN) CLOSED(I)=CLOSED(I)+DRNEW*FLAM
  310     R3(I) = R2(I)
          R4(I) = R1(I)
  320   CONTINUE
C
        CALL TRNSFM(Q,R,VECNOW,N,.FALSE.,.TRUE.)
C
        IND=-N
        DO 330 I=1,N
          IND=IND+N+1
          R(IND)=R(IND)+R1(I)
  330   CONTINUE
        CALL SYMINV(R,N,N,IFAIL)
        IF (IFAIL.GT.N) GOTO 480

        CALL DSYFIL('U',N,R,N)
        IND=0
        DO 340 IC=1,N
        DO 340 IR=1,N
          IND=IND+1
          R(IND)=-R3(IR)*R(IND)*R2(IC)
  340   CONTINUE
        IND=-N
        DO 350 I=1,N
          IND=IND+N+1
          R(IND)=R(IND)+R4(I)
  350   CONTINUE
        IF (IREAD) GOTO 400
C
C  IF ICODE=1 COMPUTE NEW STEP SIZE AND TEST FOR END OF PROPAGATION.
        DRNEW=DR*RNOW/RMID
        IF (DRNEW.LT.DR) DRNEW=DR
C
        DO 360 I=1,N
          EIGOLD(I)=EIGNOW(I)
  360   CONTINUE
C
C  SEE IF OFF-DIAG ELEMENTS OF VECOLD ARE SMALL ENOUGH.
C  NOTE THAT R1,R2 ARE USED AS INTEGER ARRAYS INSIDE COLIM AND STRY
        CALL COLIM(VECOLD,N1,N2,VTOL,N)
        CALL STRY(N1,N2,N,ITRY,EIGOLD)
        IF (ITRY.NE.1) GOTO 380

        RUP=RNOW+DRNOW/2.D0
        IF (RUP.GE.RMAX) GOTO 370

        ITRY=0
        GOTO 380

  370   IF (ISCRU.LE.0) GOTO 450

        DRNEW=-9999.D0
        WRITE(ISCRU) DRNEW
        WRITE(ISCRU) VECOLD
        GOTO 450

  380   IF (ISCRU.GT.0) WRITE(ISCRU) DRNEW
C  31-08-2018 VALUES BELOW MULTIPLIED BY EPSIL TO CONVERT TO CM-1
        EIG1=(ERED+EIGOLD(1))/(RMLMDA/EPSIL)
        EIGN=(ERED+EIGOLD(N))/(RMLMDA/EPSIL)
        IF (IPRINT.GE.20) WRITE(6,390) KSTEP,RNOW,EIG1,EIGN
  390   FORMAT(1X,I7,F11.5,2(1PE16.6))
        GOTO 410
C
C  IF ICODE=2 READ NEW STEP SIZE FROM DISK
  400   READ(ISCRU) DRNEW
        IF (DRNEW.NE.-9999.D0) GOTO 410

        READ(ISCRU) VECOLD
        GOTO 450
C
  410   CNTRCT=XEPS.GT.0.D0 .AND. N.GT.NOPMAX .AND. CLOSED(N).GT.DEEP
        IF (IWRITE) WRITE(ISCRU) CLOSED,CNTRCT
        IF (IREAD)  READ (ISCRU) CLOSED,CNTRCT
        IF (CNTRCT)
     1    CALL SHRINK(ICODE,RNOW,W,N,VL,IV,NB,JSINDX,L,EINT,CENT,WVEC,
     2                CLOSED,VECOLD,EIGOLD,R,VECNOW,DEEP,NSQ,NPOTL,
     3                ISCRU,NOPMAX,IPRINT)
  430 CONTINUE
C  END OF R-MATRIX PROPAGATION LOOP
C
      WRITE(6,440)
  440 FORMAT(/' ***** ERROR IN RMTPRP - LIMIT OF',I7,'STEPS REACHED.',
     1       ' RUN HALTED.')
      STOP
C
C  REACH HERE WHEN ASYMPTOTIC REGION IS REACHED
  450 CALL TRNSP(VECOLD,N)
      CALL TRNSFM(VECOLD,R,VECNOW,N,.FALSE.,.TRUE.)
C
      RUP=RNOW+DRNOW/2.D0
C     IF (ICODE.EQ.1 .AND. IPRINT.GE.4) WRITE(6,460) RUP,KSTEP
C 460 FORMAT('  FINISHED AT RUP =',F10.5,' AFTER',I7,' STEPS')
      IF (ICODE.NE.1 .AND. IPRINT.GE.13) WRITE(6,470)
  470 FORMAT(/'  R-MATRIX PROPAGATION COMPLETED USING STORED DATA')
C
      CALL SYMINV(R,N,N,IFAIL)
      IF (IFAIL.GT.N) GOTO 480
      NBAS=N
      NSQBAS=N*N

      RETURN
C
  480 WRITE(6,490)
  490 FORMAT(/' ***** ERROR IN SYMINV CALLED FROM RMTPRP.',
     1       '  RUN HALTED.')
      STOP
      END
