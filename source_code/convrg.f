      SUBROUTINE CONVRG(J,SR,SI,SROLD,SIOLD,IPRINT)
C  Copyright (C) 2018 J. M. Hutson & C. R. Le Sueur
C  Distributed under the GNU General Public License, version 3
C
C  SUBROUTINE TO ASSIST IN THE ESTIMATION OF CONVERGENCE ERRORS
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      SAVE
      DIMENSION SR(1),SI(1),SROLD(1),SIOLD(1)
      COMMON /DRIVE/ STEST,STEPS,STABIL,XCONV,RMIND,RMAXD,XEPS,DRNOW,
     1               DRMAX,RMIDD,RMATCH,TOLHI,RTURN,VTOL,ESHIFT,
     2               ERED,RMLMDA,NOPEN,JKEEP,ISCRU,MAXSTP,ILDSVU

      INTEGER MXSEG,IDIR,IFLG,NSEGS,NSTEPS
      DOUBLE PRECISION RST,REND,DRPR,STEPS
      PARAMETER (MXSEG=3)
      COMMON /PRPDTA/ RST(MXSEG),REND(MXSEG),DRPR(MXSEG),
     1                IDIR(MXSEG),IFLG(MXSEG),NSEGS,NSTEPS(MXSEG)
C
      NAMELIST /CONV/ ICONVU,IVAR,DR
C
      NOPSQ=NOPEN*NOPEN
      IF (J.GT.1) GOTO 200

      ISCRU=0
      IVAR=0
      DR=0.1D0
      READ(5,CONV)

      RMIN=RST(1)
      RMAX=REND(NSEGS)
      RMID=REND(1)

      IF (IPRINT.GE.1) THEN
        IF (IVAR.EQ.0) THEN
          IF (STEPS.GT.0.D0) THEN
            WRITE(6,500) 'STEPS','HALVE'
          ELSE
            WRITE(6,500) 'DR','DOUBLE'
          ENDIF
        ELSEIF (IVAR.EQ.1) THEN
          WRITE(6,510) 'RMIN','INCREASE',DR
        ELSEIF (IVAR.EQ.2) THEN
          WRITE(6,510) 'RMID','DECREASE',DR
        ELSEIF (IVAR.EQ.3) THEN
          WRITE(6,510) 'RMAX','DECREASE',DR
        ENDIF
  500   FORMAT(/'  CONVERGENCE TESTS: ',A,' WILL ',A,' EACH TIME')
  510   FORMAT(/'  CONVERGENCE TESTS: ',A,' WILL ',A,' BY ',G11.4,
     1         ' EACH TIME')
      ENDIF

      IF (ICONVU.LT.0) GOTO 200

      NSQOLD=NOPSQ
      DO 100 I=1,NOPSQ
        SROLD(I)=SR(I)
  100   SIOLD(I)=SI(I)
      IF (ICONVU.EQ.0) GOTO 300

      REWIND ICONVU
      WRITE(ICONVU) NOPSQ
      WRITE(ICONVU) (SROLD(I),I=1,NOPSQ)
      WRITE(ICONVU) (SIOLD(I),I=1,NOPSQ)
      GOTO 300
C
  200 ICONVU=IABS(ICONVU)
      IF (ICONVU.EQ.0) GOTO 300

      REWIND(ICONVU)
      READ(ICONVU) NSQOLD
      READ(ICONVU) (SROLD(I),I=1,NSQOLD)
      READ(ICONVU) (SIOLD(I),I=1,NSQOLD)

      IF (IPRINT.GE.1) WRITE(6,601) ICONVU
  601 FORMAT(/'  CONVERGENCE TESTS: REFERENCE S-MATRIX READ IN FROM ',
     1       'CHANNEL',I3)
  300 IF (NOPSQ.NE.NSQOLD) GOTO 600

      IF (J.GT.1 .OR. ICONVU.LT.0) THEN
        ERRSM=0.D0
        ERRTP=0.D0
        DO 400 I=1,NOPSQ
          DIF = (SR(I)-SROLD(I))**2 + (SI(I)-SIOLD(I))**2
          ERRSM=ERRSM+DIF
          DIF = (SR(I)**2 - SROLD(I)**2 + SI(I)**2 - SIOLD(I)**2)**2
          ERRTP=ERRTP+DIF
  400   CONTINUE
C
        ERRSM=SQRT(ERRSM/DBLE(NOPSQ))
        ERRTP=SQRT(ERRTP/DBLE(NOPSQ))
        XSM=LOG10(MAX(ERRSM,1.D-30))
        XTP=LOG10(MAX(ERRTP,1.D-30))
        IF (STEPS.LT.0.D0) THEN
          WRITE(6,602) RMIN,RMAX,RMID,'DR',DRNOW,ERRSM,XSM,ERRTP,XTP
        ELSE
          WRITE(6,602) RMIN,RMAX,RMID,'STEPS',STEPS,ERRSM,XSM,ERRTP,XTP
        ENDIF
  602   FORMAT(/'  FOR RMIN =',F7.2,' RMAX =',F11.2,' RMID =',F7.2,
     1         ' ',A,' =',F8.4,/
     2         '  RMS CHANGE IN S-MATRIX ELEMENTS IS ',7X,
     3         E12.5,5X,'LOG IS',F8.3/
     4         '  RMS CHANGE IN TRANSITION PROBABILITIES IS ',
     5         E12.5,5X,'LOG IS',F8.3)
      ENDIF
C
C  SET THE PROPAGATION LIMITS IN PRPDTA TO THE NEW VALUES.
C  NOTE THIS CODE ONLY WORKS IN THE RESTRICTED CASE THAT IRMSET=IRXSET=0
      DO ISEG=1,NSEGS
        IF (IVAR.EQ.1 .AND. RMIN.EQ.RST(ISEG)) THEN
          RST(ISEG)=RST(ISEG)+DR
        ENDIF
        IF (IVAR.EQ.2 .AND. RMID.EQ.RST(ISEG) .AND. ISEG.EQ.2) THEN
          RST(ISEG)=RST(ISEG)-DR
        ENDIF
        IF (IVAR.EQ.2 .AND. RMID.EQ.REND(ISEG) .AND. ISEG.EQ.1 .AND.
     1      NSEGS.EQ.2) THEN
          REND(ISEG)=REND(ISEG)-DR
        ENDIF
        IF (IVAR.EQ.3 .AND. RMAX.EQ.REND(ISEG)) THEN
          REND(ISEG)=REND(ISEG)-DR
        ENDIF
        IF (IVAR.EQ.0 .AND. STEPS.LE.0.D0) THEN
          DRPR(ISEG)=DRPR(ISEG)*2.D0
        ENDIF
      ENDDO

C  SET THE PROPAGATION LIMITS IN DRIVE TO THE NEW VALUES
      IF (IVAR.EQ.0 .AND. STEPS.LE.0.D0) DRNOW=DRNOW+DRNOW
      IF (IVAR.EQ.0 .AND. STEPS.GT.0.D0) STEPS=STEPS/2.D0
      IF (IVAR.EQ.1) RMIND=RMIND+DR
      IF (IVAR.EQ.2) RMIDD=RMIDD-DR
      IF (IVAR.EQ.3) RMAXD=RMAXD-DR
      RETURN
C
  600 WRITE(6,605) NOPSQ,NSQOLD
  605 FORMAT(/'  *** ERROR IN CONVRG - NUMBER OF OPEN CHANNELS HAS ',
     1       ' CHANGED'/5X,'NOPSQ =',I5,6X,'NSQOLD =',I5)
      RETURN
      END
